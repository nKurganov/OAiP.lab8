#include "Vector.h"
#include "Dialog.h"
using namespace std;
void main()
{
	Dialog D;
	D.Execute();

}

//1. Что такое класс-группа? Привести примеры таких классов.
// Группа  это объект, в который включены другие объекты. Объекты, входящие в
//группу, называются элементами группы.Элементы группы, в свою очередь, могут быть
//группой.
//Примеры групп:
// 1. Некая организационная структура (например, ФАКУЛЬТЕТ, КАФЕДРА, СТУДЕНЧЕСКАЯ ГРУППА).
// 2. Агрегат, состоящий из более мелких узлов.
// 3. Огород, состоящий из растений, системы полива и плана выращивания.
//2. Привести пример описания класса - группы Список(List).
// typedef<class T>
// class list
//{
//public:
//    list();
//    list(T value);
//	  list(const list<T>&);
//	  ~list();
//	  virtual void Add(int value);//добавления элемента
//	  int lentgh();             //размер списка
//	  virtual void Del();
//private:
//    list* next;
//    T obj;
//};
//3. Привести пример конструктора(с параметром, без параметров, копирования) для
//класса - группы Список.
//typedef<class T>
//list(T value){
//	 obj = value;
//   next = 0;
//}
//list(){
//	 obj = nullptr;
//   next = 0;
//}
//typedef<class T>
//list(const list<T>&l)
//{
//	  obj = l.obj;
//	  next = l.next;
//}
//4. Привести пример деструктора для класса - группы Список.
// list::~list()
//{
//	  if (next != 0)
//		  delete next;
//}
//5. Привести пример метода для просмотра элементов для класса - группы Список.
// list::~list()
//{
//	  if (next != 0)
//		  delete next;
//}
//6. Какой вид иерархии дает группа ?
// Группа дает второй вид иерархии - иерархию объектов(иерархию типа целое / часть), построенную на основе агрегации.
//7. Почему во главе иерархии классов, содержащихся в группе объектов должен
//находиться абстрактный класс ?
// Для описания базовых функций которые должны находится в классах потомках.
//8. Что такое событие ? Для чего используются события ?
// Событие - пакеты информации, которыми
//обмениваются объекты и которые создаются объектно - ориентированной средой в ответ на
//те или иные действия пользователя.
// События лишь управляют объектами которые реализуют обработку данных.
//9. Какие характеристики должно иметь событие - сообщение ?
// - код класса сообщения, отличающий сообщения объектов одного класса от объектов
//другого класса; 
//-адрес объекта, которому предназначено сообщение(м.б.не задан, тогда сообщение
//	могут прочитать все объекты); 
//-информационное поле.
//10. Привести пример структуры, описывающей событие.
// struct TEvent
//{
//	int what;//тип события
//	union
//	{
//		int command;//код команды
//		struct
//		{
//			int message;
//			int a;//параметр команды
//		};
//	};
//};
//11. Задана структура события
//struct TEvent
//{
//	int what;
//	union
//	{
//		MouseEventType mouse;
//		KeyDownEvent keyDown;
//		MessageEvent message;
//	}
//};
//Какие значения, и в каких случаях присваиваются полю what ?
//	evNothing - пустое событие, которое означает, что ничего делать не надо.
//	evMessage - событие-сообщение от объекта.
//	
//12. Задана структура события
//struct TEvent
//{
//	int what;//тип события
//	union
//	{
//		int command;//код комманды
//		struct//параметры команды
//		{
//			int message;
//			int a;
//		};
//	};
//};
//Какие значения, и в каких случаях присваиваются полю command ?
// Присваивается код команды когда требуется её выполнить.
//13. Задана структура события
//struct TEvent
//{
//	int what;//тип события
//	union
//	{
//		int command;//код комманды
//		struct//параметры команды
//		{
//			int message;
//			int a;
//		};
//	};
//};
//Для чего используются поля a и message ?
// "a" для передачи параметра события, "message" для сообщения(информации)
//14. Какие методы необходимы для организации обработки сообщений ?
//	GetEvent – формирование события;
//	Execute реализует главный цикл обработки событий.Он постоянно получает
//событие путем вызова GetEvent и обрабатывает их с помощью HandleEvent.
//Этот цикл завершается, когда поступит событие «конец».
//	HandleEvent 
//	ClearEvent 
//15. Какой вид имеет главный цикл обработки событий - сообщений ?
//int TMyApp::Execute()
//{
//	do
//	{
//		endState = 0;
//		GetEvent(event); //получить событие
//		HandleEvent(event); //обработать событие
//		//событие осталось не обработано
//			if (event.what != evNothing)
//		EventError(event);
//	}  while (!Valid());
//	return endState;
//}
//16. Какую функцию выполняет метод ClearEvent() ? Каким образом ?
// ClearEvent очищает событие, присваивая полю event.What значение evNothing
//17. Какую функцию выполняет метод HandleEvent() ? Каким образом ?
// – обработчик событий.Обрабатывает каждое событие нужным для
//него образом.Если объект должен обрабатывать определенное событие(сообщение), то
//его метод HandleEvent должен распознавать это событие и реагировать на него должным
//образом.Событие может распознаваться, например, по коду команды(поле command).
// Обработчик событий (метод HandleEvent).
//Получив событие(структуру типа TEvent), обработчик событий для класса
//TDerivedClass обрабатывает его по следующей схеме :
//void TDerivedClass::HandleEvent(TEvent& event)
//{ //Вызов обработчика событий базового класса
//	TBaseClass::handleEvent(event);
//	if (event.what == evCommand) // Если обработчик событий
//		базового класса
//		// событие не обработал
//	{
//	switch (event.message.command)
//	{
//	case cmCommand1:
//		// Обработка команды cmCommand1
//		// Очистка события
//		СlearEvent(event);
//		break;
//		case cmCommand2:
//			// Обработка команды cmCommand2
//			СlearEvent(event);
//			break;
//			…
//			case cmCommandN:
//				// Обработка команды cmCommandN
//				СlearEvent(event);
//				break;
//				default: // событие не обработано
//				break;
//				}
//	};
//}
//18. Какую функцию выполняет метод GetEvent() ?
// GetEvent выполняет функцию формирования события
//19. Для чего используется поле EndState ? Какой класс(объект) содержит это поле ?
// Для передачи информации об окончании "работы"
//20. Для чего используется функция Valid() ?
// Для возвращающая значение true, если “конец работы”
//
